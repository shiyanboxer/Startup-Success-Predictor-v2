{"version":3,"sources":["Forms.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Forms","e","preventDefault","total_funding","document","getElementById","value","founded_year","axios","method","url","data","then","response","innerHTML","alert","md","className","type","id","placeholder","color","onClick","this","handler","style","width","src","waves","Component","Footer","href","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iOAqEeA,E,sKA7DHC,GACJA,EAAEC,iBACF,IAAMC,EAAgBC,SAASC,eAAe,iBAAiBC,MACzDC,EAAeH,SAASC,eAAe,gBAAgBC,MAEvC,KAAlBH,GAAyC,KAAjBI,EAK5BC,IAAM,CACFC,OAAO,OACPC,IAAI,8DACJC,KAAK,CAAC,cAAgBR,EAAe,aAAeI,KACrDK,MAAM,SAACC,GAEiB,GADRA,EAASF,KACbE,SAAgBT,SAASC,eAAe,UAAUS,UAAY,sCACjEV,SAASC,eAAe,UAAUS,UAAY,2CAXtDC,MAAM,0B,+BAgBV,OACI,cAAC,IAAD,UACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQC,GAAG,IAAX,SACA,iCACI,mBAAGC,UAAU,sBAAb,gCACA,uBAAOA,UAAU,YAAjB,2BAGA,uBAAOC,KAAK,SAASC,GAAG,gBAAgBC,YAAa,WAAYH,UAAU,iBAC3E,uBACA,uBAAOA,UAAU,YAAjB,2BAGA,uBAAOC,KAAK,SAASC,GAAG,eAAeC,YAAa,WAAYH,UAAU,iBAC1E,uBAEA,qBAAKA,UAAU,mBAAf,SACA,cAAC,IAAD,CAAQI,MAAM,SAASC,QAASC,KAAKC,QAArC,kCAMJ,cAAC,IAAD,CAAQR,GAAG,IAAX,SACI,eAAC,IAAD,CAASS,MAAO,CAAEC,MAAO,SAAzB,UACI,cAAC,IAAD,CAAcT,UAAU,YAAYU,IAAI,0DAA0DC,OAAK,IACvG,eAAC,IAAD,WACA,cAAC,IAAD,yBACA,cAAC,IAAD,CAAaT,GAAI,4B,GApDrBU,aCULC,E,uKAXP,OACA,mBACIb,UAAU,YACVc,KAAK,kCACLC,OAAO,SAHX,kC,GAJaH,a,qBCoBNI,MAff,WACE,OACI,sBAAKhB,UAAU,MAAf,UACE,2DAGA,gHAGA,cAAC,EAAD,IACA,cAAC,EAAD,QCNOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASC,eAAe,SAM1B6B,K","file":"static/js/main.2f256ed5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\nimport './App.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText} from 'mdbreact';\r\n\r\n\r\nclass Forms extends Component {\r\n    handler(e) {\r\n        e.preventDefault()\r\n        const total_funding = document.getElementById(\"total_funding\").value\r\n        const founded_year = document.getElementById(\"founded_year\").value\r\n        \r\n        if (total_funding === \"\" || founded_year === \"\") {\r\n            alert(\"Please enter details\")\r\n            return\r\n        } \r\n\r\n        axios({\r\n            method:\"POST\",\r\n            url:\"https://startup-success-predictor-api.herokuapp.com/predict\",\r\n            data:{\"total_funding\":total_funding, \"founded_year\":founded_year}\r\n        }).then( (response)=>{\r\n            const output = response.data\r\n            if (output.response == 1) {document.getElementById(\"target\").innerHTML = \"This company will be ... SUCCESSFUL\"} \r\n            else { {document.getElementById(\"target\").innerHTML = \"This company will be ... UNSUCCESSFUL\"}}       \r\n        })      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                <form>\r\n                    <p className=\"h4 text-center mb-4\">Enter company info</p>\r\n                    <label className=\"grey-text\">\r\n                    Total Funding\r\n                    </label>\r\n                    <input type=\"number\" id=\"total_funding\" placeholder={\"Eg. 1500\"} className=\"form-control\" />\r\n                    <br />\r\n                    <label className=\"grey-text\">\r\n                    Founding Year\r\n                    </label>\r\n                    <input type=\"number\" id=\"founded_year\" placeholder={\"Eg. 2000\"} className=\"form-control\" />\r\n                    <br />\r\n\r\n                    <div className=\"text-center mt-4\">\r\n                    <MDBBtn color=\"unique\" onClick={this.handler}>\r\n                        Enter details\r\n                    </MDBBtn>\r\n                    </div>\r\n                </form>\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                    <MDBCard style={{ width: \"22rem\" }}>\r\n                        <MDBCardImage className=\"img-fluid\" src=\"https://mdbootstrap.com/img/Photos/Others/images/43.jpg\" waves />\r\n                        <MDBCardBody>\r\n                        <MDBCardTitle>Card title</MDBCardTitle>\r\n                        <MDBCardText id =\"target\">\r\n                        </MDBCardText>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\nexport default Forms;","import React, { Component } from \"react\";\r\nimport './App.css';\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <a\r\n            className=\"highlight\"\r\n            href=\"http://shiyanboxer.netlify.app/\"\r\n            target=\"_blank\"\r\n          >\r\n            By: Shiyan Boxer\r\n          </a>\r\n        );\r\n    }\r\n}\r\nexport default Footer;","import './App.css';\r\nimport Forms from './Forms.js';\r\nimport Footer from './Footer.js';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <h1>\r\n          Startup Success Predictor\r\n        </h1>\r\n        <p>\r\n          Will this startup be successful? Enter the company's details here and find out! \r\n          </p>\r\n        <Forms />\r\n        <Footer />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}